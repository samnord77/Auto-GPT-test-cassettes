interactions:
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are browse_website-GPT, an AI designed to use the browse_website command to
      visit http://books.toscrape.com/catalogue/meditations_33/index.html, answer
      the question ''What is the price of the book?'' and write the price to a file
      named \"browse_website.txt\", and use the task_complete command to complete
      the task.\nYour decisions must always be made independently without seeking
      user assistance. Play to your strengths as an LLM and pursue simple strategies
      with no legal complications.\n\nGOALS:\n\n1. Use the browse_website command
      to visit http://books.toscrape.com/catalogue/meditations_33/index.html and answer
      the question ''What is the price of the book?''\n2. Write the price of the book
      to a file named \"browse_website.txt\".\n3. Use the task_complete command to
      complete the task.\n4. Do not use any other commands.\n\n\nConstraints:\n1.
      ~4000 word limit for short term memory. Your short term memory is short, so
      immediately save important information to files.\n2. If you are unsure how you
      previously did something or want to recall past events, thinking about similar
      events will help you remember.\n3. No user assistance\n4. Exclusively use the
      commands listed below e.g. command_name\n\nCommands:\n1. append_to_file: Append
      to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file:
      Delete file, args: \"filename\": \"<filename>\"\n3. list_files: List Files in
      Directory, args: \"directory\": \"<directory>\"\n4. read_file: Read a file,
      args: \"filename\": \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\":
      \"<filename>\", \"text\": \"<text>\"\n6. browse_website: Browse Website, args:
      \"url\": \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n7.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n8. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n9. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n10. list_agents: List
      GPT Agents, args: () -> str\n11. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n12. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n13.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '3767'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6RTS2/TQBC+8ytGc+nFeTVpKL5w4FSQKgSlFWAUbTYTe4m94+6Ok6Io/71a20md
        0CIEt9Xsfq/ZmS2aBcaoMyW6KPPe6w+3k/Tj+t3qq7r235bXE1LvbydDc/7p7uYXRsjzn6SlRfQ1
        F2VOYthihNqRElpgPJpeXozOh+PpNMKCF5RjjGkpvXH/oieVm3NvOB6OMMLKq5Qw3mLpuChlJrwi
        6zG+nEwjfOI+1M8vhhEKi8oPpdHwzXQXoc7YaPIYf99iQX7P6zgnjFF5b7woK8ElWyEbEmwTCwCQ
        oGRcpZn4BGNoi+0FPUgoJngFG5PnUHkCyQjmjjeeZhuaeyMEmotC2QUIw9p4I5CJlPFgMGde+b6w
        106VFLo10EpUzmlFg4IWRlTI52fj8cDYBT30MylyCFRLE/gygtIZTcDLRpd51U8w6pp0pDxbY9PG
        6U1GIMqvwNF9ZRx5KCgYe5kQ2NbnNk0fbl5OWHdB5TlvWtombwdeu/eknM5gye5J8tR3mSvbWO7B
        l7/sa0cnSWwPPj+j043WPFJr6lwLg4KlyQmsKmgBZ8eifXmQsxq3NxW6OWun8cjTobZ/dZJQOyNG
        G1/sZ8gS1UCyvnIBpgSuQBVtv4xND1E0O0dawNglu6Iek5N/qhvdoVDrgA8PuhjhI7qQ+/QjfElq
        9U9jfurmj0PbSO6i/da1bL8tXfiVxs2x/Ilr5dLThW0uKpc38P9awiO1hvi+Ih9eNux3ofPGPx/3
        7T5uHblNntgd7iJcGmt8NmvWFmP0wiVGWEtjPNz92L16BAAA//8DAMouSkGVBQAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cd791945f4286d5-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 26 May 2023 16:59:59 GMT
      Function-Execution-Id:
      - u75a043y7r7n
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '32563'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - c0122258ab10720af751f757faf7ed83;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86494'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.337s
      X-Request-Id:
      - a4d5b1a139a3cc727efd5fce1d23ee62
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Write
      a concise summary of the following text; include any information that can be
      used to answer the question \"What is the price of the book?\". Do not directly
      answer the question itself:\n\n\nLITERAL TEXT: \"\"\"Books to Scrape We love
      being scraped! Home Books Philosophy Meditations Meditations \u00a325.89 In
      stock (1 available) Warning! This is a demo website for web scraping purposes.
      Prices and ratings here were randomly assigned and have no real meaning. Product
      Description Written in Greek, without any intention of publication, by the only
      Roman emperor who was also a philosopher, the Meditations of Marcus Aurelius
      (AD 121-180) offer a remarkable series of challenging spiritual reflections
      and exercises developed as the emperor struggled to understand himself and make
      sense of the universe. Ranging from doubt and despair to conviction and ex Written
      in Greek, without any intention of publication, by the only Roman emperor who
      was also a philosopher, the Meditations of Marcus Aurelius (AD 121-180) offer
      a remarkable series of challenging spiritual reflections and exercises developed
      as the emperor struggled to understand himself and make sense of the universe.
      Ranging from doubt and despair to conviction and exaltation, they cover such
      diverse topics as the nature of moral virtue, human rationality, divine providence,
      and Marcus'' own emotions. But while the Meditations were composed to provide
      personal consolation and encouragement, in developing his beliefs Marcus Aurelius
      also created one of the greatest of all works of philosophy: a timeless collection
      of extended meditations and short aphorisms that has been consulted and admired
      by statesmen, thinkers and readers through the centuries. ...more Product Information
      UPC4f19709e47883df5 Product TypeBooks Price (excl. tax)\u00a325.89 Price (incl.
      tax)\u00a325.89 Tax\u00a30.00 Availability In stock (1 available) Number of
      reviews 0 Products you recently viewed The Nicomachean Ethics \u00a336.34 In
      stock Add to basket Run, Spot, Run: The ... \u00a320.02 In stock Add to basket
      Critique of Pure Reason \u00a320.75 In stock Add to basket At The Existentialist
      Caf\u00e9: ... \u00a329.93 In stock Add to basket Kierkegaard: A Christian Missionary
      ... \u00a347.13 In stock Add to basket Proofs of God: Classical ... \u00a354.21
      In stock Add to basket\"\"\"\n\n\nCONCISE SUMMARY: The text is best summarized
      as"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '2507'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA1SS3W4TMRCF73mKka830aZtmrJ3IHGBoCAQqpAoqrz2ZD3E67FmvEmjqk/Dm/Bk
        yNs2iDtrfs6c88kPhrzpjAu2uDHHxebDzfrjxuO7t5vvtN8G/n7E0Mf2082X+8+mMdz/QleeN5aO
        xxyxECfTGCdoC3rTrS6v1quz9qLdNGZkj9F0Zshlcb5cL8okPS/a83ZlGjOpHdB0DyYLj7ncFd5h
        UtOt24vG/NM+1VertjGFi42n0uXq4rExLjA5VNP9eDAj6ouscETTGatKWmwq1SSngqkGsOBRnVCu
        J4C3UAJCz7yDW3ONnoqtDb010B/h2oqbFN5MgpEmbeAQyAUgBbu3FG0fEbYskCdxwSoCJ6gHRoYD
        9krlqX3AHtSJzZSGOptZUZfwLSBkIYf/2SCFP7/P1sur1w30U5kbL2IHK0mhBPtUnpcVbPIgtlAa
        FKwgiE2ex3iESmBI6OeJYPcIiUHQRhjRJkrDk4f5LG+3KAqaSahMNoLgNqKbYcz7eI/iSFHB4x4j
        Z/QVUfXxlUebAMeMwjIP50CRlXNAacDxHqVGL5zJKejkAliFkcVG2JOUCRsIUxWRGb+NVI7NrORp
        T6lG5T15TA6X8L5USI6TkkdBD5xOCIf5N2qBA8tOa/Vk5fiMQaFHTGD9SPKSgdKupp9JovX1XYLw
        NASeCgTSwnJcmsfGbCmRhjtBq5xMZ7RwNo2h5PHedO3jz8dXfwEAAP//AwDqDQy8XQMAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cd79292ccc210f4-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 26 May 2023 17:00:21 GMT
      Function-Execution-Id:
      - u75adfex8pcl
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '13469'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 511db7842a255f82082bf08fc80ebb22;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '88914'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 724ms
      X-Request-Id:
      - 4cded51e3744bef31d8d934d6b0119a2
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are browse_website-GPT, an AI designed to use the browse_website command to
      visit http://books.toscrape.com/catalogue/meditations_33/index.html, answer
      the question ''What is the price of the book?'' and write the price to a file
      named \"browse_website.txt\", and use the task_complete command to complete
      the task.\nYour decisions must always be made independently without seeking
      user assistance. Play to your strengths as an LLM and pursue simple strategies
      with no legal complications.\n\nGOALS:\n\n1. Use the browse_website command
      to visit http://books.toscrape.com/catalogue/meditations_33/index.html and answer
      the question ''What is the price of the book?''\n2. Write the price of the book
      to a file named \"browse_website.txt\".\n3. Use the task_complete command to
      complete the task.\n4. Do not use any other commands.\n\n\nConstraints:\n1.
      ~4000 word limit for short term memory. Your short term memory is short, so
      immediately save important information to files.\n2. If you are unsure how you
      previously did something or want to recall past events, thinking about similar
      events will help you remember.\n3. No user assistance\n4. Exclusively use the
      commands listed below e.g. command_name\n\nCommands:\n1. append_to_file: Append
      to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file:
      Delete file, args: \"filename\": \"<filename>\"\n3. list_files: List Files in
      Directory, args: \"directory\": \"<directory>\"\n4. read_file: Read a file,
      args: \"filename\": \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\":
      \"<filename>\", \"text\": \"<text>\"\n6. browse_website: Browse Website, args:
      \"url\": \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n7.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n8. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n9. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n10. list_agents: List
      GPT Agents, args: () -> str\n11. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n12. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n13.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I will use the browse_website command
      to visit http://books.toscrape.com/catalogue/meditations_33/index.html and find
      the price of the book.\",\n        \"reasoning\": \"The task requires me to
      find the price of the book on the website. The browse_website command will allow
      me to visit the website and search for the price.\",\n        \"plan\": \"-
      Use the browse_website command to visit the website\\n- Search for the price
      of the book\\n- Save the price to a file named ''browse_website.txt''\\n- Use
      the task_complete command to complete the task\",\n        \"criticism\": \"I
      need to ensure that I am searching for the correct information on the website
      and that I am saving the information to the correct file.\",\n        \"speak\":
      \"I will use the browse_website command to visit the website and find the price
      of the book.\"\n    },\n    \"command\": {\n        \"name\": \"browse_website\",\n        \"args\":
      {\n            \"url\": \"http://books.toscrape.com/catalogue/meditations_33/index.html\",\n            \"question\":
      \"What is the price of the book?\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command browse_website returned: Answer gathered from website: a
      description of the book \"Meditations\" by Marcus Aurelius, which is available
      for purchase on a demo website for web scraping purposes. The price of the book
      is \u00a325.89, but the website warns that the prices and ratings are randomly
      assigned and have no real meaning. The book offers spiritual reflections and
      exercises developed by the Roman emperor and philosopher, covering topics such
      as moral virtue, human rationality, and divine providence. It is considered
      one of the greatest works of philosophy and has been admired by thinkers and
      readers throughout history.\n\nLinks: [''Books to Scrape (http://books.toscrape.com/index.html)'',
      ''Home (http://books.toscrape.com/index.html)'', ''Books (http://books.toscrape.com/catalogue/category/books_1/index.html)'',
      ''Philosophy (http://books.toscrape.com/catalogue/category/books/philosophy_7/index.html)'',
      '' (http://books.toscrape.com/catalogue/the-nicomachean-ethics_75/index.html)'']"},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '6193'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA7yTzY7TQAzH7zyF5cte0qoftJRcERKrFeLAwgoRFE0mbjM0GWdnnE2lqk/Dm/Bk
        aJJ0u+2CxAWO44+/f/bYezQ5xqgLJbqqy9Grm8+LrLmRjx/u3ty3bTFdzN7ffcnfvqO2yDBCzr6T
        liFjrLmqSxLDFiPUjpRQjvF0uVpMZ5OXs3mEFedUYoybWkbz8WIkjct4NJlPphhh49WGMN5j7biq
        JRXekvUYT+fLZYQn8UfHbDaJUFhUeYpdrJaHCHXBRpPH+OseK/JHYcclYYzKe+NFWQmYbIVsaGGf
        WACABKXgZlOITzCGwTg4aCfBmOA1tKYsofEEUhC0zgilwunalASaq0rZHITBq4c+onZGE/C6e2TM
        2+BV0MVbVVEOV5nj1lPaUuaN0Fh2cjVOMHoK4Eh5tsZueorbgkCU34Kj+8Y48lDR31Ydw+0fwbve
        VFlyOwj2fwkKLLU9MzvgB3JdPigLtDNejN303tZI8XuAy47qUtm+mRF8+sfTTBJ7KhLmlg47dVbk
        0XaMuiDWzojRxlfHTbBEXSJZ37iQpgSuQVUBN0wk6Gh2jrSAsWt2lQpbHFKeurpPuajla1Lb/71x
        PcAhOp7DIP7sGoJIz3YGc9GCcpvLQ+odIfYk8RzlTOfy/n7+mC3Gq9dH2A544E7sAQ8Rro01vkj7
        i8EYvXCNERqb0w7jyeHb4cUvAAAA//8DAAvygtrtBAAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cd792f4f804e257-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 26 May 2023 17:00:44 GMT
      Function-Execution-Id:
      - u75aiw9po6hp
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '21026'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 5137cc49cba29d4edf5d43fe477851c0;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '85960'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.692s
      X-Request-Id:
      - 0b190eb7517e36539beede138396fd80
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are browse_website-GPT, an AI designed to use the browse_website command to
      visit http://books.toscrape.com/catalogue/meditations_33/index.html, answer
      the question ''What is the price of the book?'' and write the price to a file
      named \"browse_website.txt\", and use the task_complete command to complete
      the task.\nYour decisions must always be made independently without seeking
      user assistance. Play to your strengths as an LLM and pursue simple strategies
      with no legal complications.\n\nGOALS:\n\n1. Use the browse_website command
      to visit http://books.toscrape.com/catalogue/meditations_33/index.html and answer
      the question ''What is the price of the book?''\n2. Write the price of the book
      to a file named \"browse_website.txt\".\n3. Use the task_complete command to
      complete the task.\n4. Do not use any other commands.\n\n\nConstraints:\n1.
      ~4000 word limit for short term memory. Your short term memory is short, so
      immediately save important information to files.\n2. If you are unsure how you
      previously did something or want to recall past events, thinking about similar
      events will help you remember.\n3. No user assistance\n4. Exclusively use the
      commands listed below e.g. command_name\n\nCommands:\n1. append_to_file: Append
      to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file:
      Delete file, args: \"filename\": \"<filename>\"\n3. list_files: List Files in
      Directory, args: \"directory\": \"<directory>\"\n4. read_file: Read a file,
      args: \"filename\": \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\":
      \"<filename>\", \"text\": \"<text>\"\n6. browse_website: Browse Website, args:
      \"url\": \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n7.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n8. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n9. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n10. list_agents: List
      GPT Agents, args: () -> str\n11. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n12. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n13.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I will use the browse_website command
      to visit http://books.toscrape.com/catalogue/meditations_33/index.html and find
      the price of the book.\",\n        \"reasoning\": \"The task requires me to
      find the price of the book on the website. The browse_website command will allow
      me to visit the website and search for the price.\",\n        \"plan\": \"-
      Use the browse_website command to visit the website\\n- Search for the price
      of the book\\n- Save the price to a file named ''browse_website.txt''\\n- Use
      the task_complete command to complete the task\",\n        \"criticism\": \"I
      need to ensure that I am searching for the correct information on the website
      and that I am saving the information to the correct file.\",\n        \"speak\":
      \"I will use the browse_website command to visit the website and find the price
      of the book.\"\n    },\n    \"command\": {\n        \"name\": \"browse_website\",\n        \"args\":
      {\n            \"url\": \"http://books.toscrape.com/catalogue/meditations_33/index.html\",\n            \"question\":
      \"What is the price of the book?\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command browse_website returned: Answer gathered from website: a
      description of the book \"Meditations\" by Marcus Aurelius, which is available
      for purchase on a demo website for web scraping purposes. The price of the book
      is \u00a325.89, but the website warns that the prices and ratings are randomly
      assigned and have no real meaning. The book offers spiritual reflections and
      exercises developed by the Roman emperor and philosopher, covering topics such
      as moral virtue, human rationality, and divine providence. It is considered
      one of the greatest works of philosophy and has been admired by thinkers and
      readers throughout history.\n\nLinks: [''Books to Scrape (http://books.toscrape.com/index.html)'',
      ''Home (http://books.toscrape.com/index.html)'', ''Books (http://books.toscrape.com/catalogue/category/books_1/index.html)'',
      ''Philosophy (http://books.toscrape.com/catalogue/category/books/philosophy_7/index.html)'',
      '' (http://books.toscrape.com/catalogue/the-nicomachean-ethics_75/index.html)'']"},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I will use the write_to_file command to save the price
      of the book to a file named ''browse_website.txt''.\",\n        \"reasoning\":
      \"The task requires me to save the price of the book to a file. The write_to_file
      command will allow me to create a new file or overwrite an existing file with
      the price of the book.\",\n        \"plan\": \"- Use the write_to_file command
      to save the price of the book to a file named ''browse_website.txt''\\n- Use
      the task_complete command to complete the task\",\n        \"criticism\": \"I
      need to ensure that I am saving the correct information to the correct file.\",\n        \"speak\":
      \"I will use the write_to_file command to save the price of the book to a file
      named ''browse_website.txt''.\"\n    },\n    \"command\": {\n        \"name\":
      \"write_to_file\",\n        \"args\": {\n            \"filename\": \"browse_website.txt\",\n            \"text\":
      \"\u00a325.89\"\n        }\n    }\n}"}, {"role": "system", "content": "Command
      write_to_file returned: File written to successfully."}, {"role": "user", "content":
      "Determine which next command to use, and respond using the format specified
      above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '7416'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA7SST2vbQBDF7/0Uw5zXxo7jONaxFNKQQg9NW2hVzHo1kjZe7QjtKElr9N2L/thW
        XUKg0OvszHu/mX17tAlGaHItpijdZHX35Wp+w8vl18Uv9/7jt7fL1QfJirub8t3DJ1TI2wcyMkxM
        DRelI7HsUaGpSAslGM2vrpfzi9nl5VphwQk5jDArZbKYLidSV1uezBazOSqsg84Ioz2WFRelbIR3
        5EMrcHGt8CQ+elgrFBbtTqXVetUoNDlbQwGj73ssKByEK3aEEeoQbBDtpcVkL+TbFfaxBwCIUXKu
        s1xCjBEMxeGBnqUtxngLuX4kGJgoAckJRIfdFG7hyToHdaBjcXPoawcK7RMQhpDXAgk/+a5NZ+Rl
        GqMa+1WkA3vrs970fpCDXAfYEvmRf6iNoRDS2rmfU7h/0bhj087xExT0Aga0jeRHS51xlU77HmkC
        n/9hzzM5U1mxxobicFtP1I2SD3XVyms5ery2PGwp5Yo6W7E+e+XEoSS9+89/2vs16pCvYeCveHld
        UI/yh8EZsa6y82SO03KKSllZQ8Bpx7JlHp0u5don3TcH/djfWkNqHR1pO+IBPPYNNgpT623IN70N
        RhiES1RofULPGM2aH82b3wAAAP//AwAroUIfPwQAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cd793980f5f023f-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 26 May 2023 17:01:08 GMT
      Function-Execution-Id:
      - u75a5asrxz1b
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '18857'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 642f5c37601e00b372f11ad8db557b8a;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '85957'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.694s
      X-Request-Id:
      - 1ee5b3efb4e5e959cbc36be30ae75832
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are browse_website-GPT, an AI designed to use the browse_website command to
      visit http://books.toscrape.com/catalogue/meditations_33/index.html, answer
      the question ''What is the price of the book?'' and write the price to a file
      named \"browse_website.txt\", and use the task_complete command to complete
      the task.\nYour decisions must always be made independently without seeking
      user assistance. Play to your strengths as an LLM and pursue simple strategies
      with no legal complications.\n\nGOALS:\n\n1. Use the browse_website command
      to visit http://books.toscrape.com/catalogue/meditations_33/index.html and answer
      the question ''What is the price of the book?''\n2. Write the price of the book
      to a file named \"browse_website.txt\".\n3. Use the task_complete command to
      complete the task.\n4. Do not use any other commands.\n\n\nConstraints:\n1.
      ~4000 word limit for short term memory. Your short term memory is short, so
      immediately save important information to files.\n2. If you are unsure how you
      previously did something or want to recall past events, thinking about similar
      events will help you remember.\n3. No user assistance\n4. Exclusively use the
      commands listed below e.g. command_name\n\nCommands:\n1. append_to_file: Append
      to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file:
      Delete file, args: \"filename\": \"<filename>\"\n3. list_files: List Files in
      Directory, args: \"directory\": \"<directory>\"\n4. read_file: Read a file,
      args: \"filename\": \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\":
      \"<filename>\", \"text\": \"<text>\"\n6. browse_website: Browse Website, args:
      \"url\": \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n7.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n8. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n9. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n10. list_agents: List
      GPT Agents, args: () -> str\n11. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n12. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n13.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '3764'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6RTS2/bMAy+71cQvPTivOqm7XwZMKADim3A1udhHgJFYWw1tuhK9FI0yH8f5Efb
        tCv2upLi9xK5QbPABHWuRJdVMTj6eHU1Pzn8fBRfr2/Oqvcuvvx6fvDl5OT8LLvHCHl+Q1q6iaHm
        sipIDFuMUDtSQgtMJofH08n+/jieRljyggpMMKtkEA+nA6ndnAfjeDzBCGuvMsJkg5XjspKZ8Iqs
        x+T4YBrhI/ZDfT9+G6GwqOKhNBkfH2wj1DkbTR6Tbxssyfe4jgvCBJX3xouyElSyFbLBwSa1AAAp
        Ss51lotPMYGu2DXoTkIxxVNYm6KA2hNITjB3vPY0W9PcGyHQXJbKLkAYfhhvBHKRKhmN5swrPxT2
        2qmKQlojrUQVnNU0KmlhRAV/fhbHI2MXdDfMpSwgQC1NwMsJKmc0AS9bXubVMMXoqUhHyrM1NmuV
        XuQEovwKHN3WxpGHkh6FKeg1/5pEtRRw8bpJ41sp5AW4CvphyQ4kDw3lX+irCmVbaQO4/MP8wpuu
        maZ2AB9eTaNpX7uA8tgXBgVLUxBYVdIC9nb5hnIne81gryfonnULtyPnoda/emZOOyNGG1/2a2KJ
        mkGyvnZhTAmcgiqh9sZmDYxm50gLXJ59an7htibfxCj8F9/uK1Krf1rOJ+H+ftVaym3U30qH9uJU
        QtCtml36Z6qVy56fWduoXdGO/9fp7LC1wH26Lfp1+I9ug1/YfdfbbSx3zlO7xW2ES2ONz2ftsWGC
        XrjCCBtqTMbb79s3PwEAAP//AwC7qEm8SwUAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cd7ba53de322311-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 26 May 2023 17:27:40 GMT
      Function-Execution-Id:
      - ldycch3j5wmo
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '24230'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - b126716e71bb19f3a992a560d1253466;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86493'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.338s
      X-Request-Id:
      - f1ac022168be404f6550d2898ce9a3b9
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are browse_website-GPT, an AI designed to use the browse_website command to
      visit http://books.toscrape.com/catalogue/meditations_33/index.html, answer
      the question ''What is the price of the book?'' and write the price to a file
      named \"browse_website.txt\", and use the task_complete command to complete
      the task.\nYour decisions must always be made independently without seeking
      user assistance. Play to your strengths as an LLM and pursue simple strategies
      with no legal complications.\n\nGOALS:\n\n1. Use the browse_website command
      to visit http://books.toscrape.com/catalogue/meditations_33/index.html and answer
      the question ''What is the price of the book?''\n2. Write the price of the book
      to a file named \"browse_website.txt\".\n3. Use the task_complete command to
      complete the task.\n4. Do not use any other commands.\n\n\nConstraints:\n1.
      ~4000 word limit for short term memory. Your short term memory is short, so
      immediately save important information to files.\n2. If you are unsure how you
      previously did something or want to recall past events, thinking about similar
      events will help you remember.\n3. No user assistance\n4. Exclusively use the
      commands listed below e.g. command_name\n\nCommands:\n1. append_to_file: Append
      to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file:
      Delete file, args: \"filename\": \"<filename>\"\n3. list_files: List Files in
      Directory, args: \"directory\": \"<directory>\"\n4. read_file: Read a file,
      args: \"filename\": \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\":
      \"<filename>\", \"text\": \"<text>\"\n6. browse_website: Browse Website, args:
      \"url\": \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n7.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n8. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n9. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n10. list_agents: List
      GPT Agents, args: () -> str\n11. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n12. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n13.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I will use the browse_website command
      to visit http://books.toscrape.com/catalogue/meditations_33/index.html and find
      the price of the book.\",\n        \"reasoning\": \"The task requires me to
      visit a website and find the price of a book. The browse_website command is
      the best option for this task.\",\n        \"plan\": \"- Use the browse_website
      command to visit the website\\n- Find the price of the book\\n- Write the price
      to a file named ''browse_website.txt''\\n- Use the task_complete command to
      complete the task\",\n        \"criticism\": \"I need to ensure that I am using
      the correct URL and question to find the price of the book.\",\n        \"speak\":
      \"I will use the browse_website command to visit the website and find the price
      of the book.\"\n    },\n    \"command\": {\n        \"name\": \"browse_website\",\n        \"args\":
      {\n            \"url\": \"http://books.toscrape.com/catalogue/meditations_33/index.html\",\n            \"question\":
      \"What is the price of the book?\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command browse_website returned: Answer gathered from website: a
      description of the book \"Meditations\" by Marcus Aurelius, which is available
      for purchase on a demo website for web scraping purposes. The price of the book
      is \u00a325.89, but the website warns that the prices and ratings are randomly
      assigned and have no real meaning. The book offers spiritual reflections and
      exercises developed by the Roman emperor and philosopher, covering topics such
      as moral virtue, human rationality, and divine providence. It is considered
      one of the greatest works of philosophy and has been admired by thinkers and
      readers throughout history.\n\nLinks: [''Books to Scrape (http://books.toscrape.com/index.html)'',
      ''Home (http://books.toscrape.com/index.html)'', ''Books (http://books.toscrape.com/catalogue/category/books_1/index.html)'',
      ''Philosophy (http://books.toscrape.com/catalogue/category/books/philosophy_7/index.html)'',
      '' (http://books.toscrape.com/catalogue/the-nicomachean-ethics_75/index.html)'']"},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '6116'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA7yTS47bMAyG9z0Fwc1sHCOPyST1CTpogQKDabOoi0CWGVuNJXokGkkR5DS9SU9W
        +JGkyaBAN+3KEH/y5ydaPKDJMUFdKtG2rkaL959Xi4/3y2rnVi8f9DR70qvdu6d8afKZxQg5+0Za
        hopYs60rEsMOI9SelFCOyeRhOZ9Mp+OHRYSWc6owwaKW0Syej6TxGY/Gs/EEI2yCKgiTA9aebS1r
        4S25gMlkNr+P8GJ+FqaTRYTCoqpL7nwxOUaoSzaaAiZfDmgpnIw9V4QJqhBMEOWkxWQn5NorHFIH
        AJCilNwUpYQUExiCg0B7aYMpPsLOVBU0gUBKgp03Qmvh9cZUBJqtVS4H4V7oUmpvNAFvukPGvG1l
        BV2BU5ZyuMs87wKtd5QFIxTLXu7iFKPfCTypwM64osd4LglEhS14emmMpwCW/rptDM9/RDehL6Ag
        wHU7dNiwBylbQYXtLVddKdcjjeDTvx5KmrpLl5ZmPbyNqy7n2CnrBll7I0abYE9/1BF1heRC49sy
        JfAIyna8xhWdkWbvSQsYt2FvVTcZ4U7qqLvmbeU5YgIMqwDGXXnkpv2w/347zVCT2v73h9YTHKPT
        Ggzur7agNenhrmhu7qB8cbtAvdDmXixeo1z53O7dzx/Tebx8e4LtgAfu1B3xGOHGOBPKdb8omGAQ
        rjFC43LaYzI+fj2++QUAAP//AwAGYWFv5QQAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cd7bb16ab75e287-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 26 May 2023 17:28:07 GMT
      Function-Execution-Id:
      - ldyckz4xl87v
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '20909'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 613f44a62a07a755ff31b0ffc2becc86;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '85968'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.688s
      X-Request-Id:
      - 21f9bfc93c0fc022cd276b3cef517c60
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are browse_website-GPT, an AI designed to use the browse_website command to
      visit http://books.toscrape.com/catalogue/meditations_33/index.html, answer
      the question ''What is the price of the book?'' and write the price to a file
      named \"browse_website.txt\", and use the task_complete command to complete
      the task.\nYour decisions must always be made independently without seeking
      user assistance. Play to your strengths as an LLM and pursue simple strategies
      with no legal complications.\n\nGOALS:\n\n1. Use the browse_website command
      to visit http://books.toscrape.com/catalogue/meditations_33/index.html and answer
      the question ''What is the price of the book?''\n2. Write the price of the book
      to a file named \"browse_website.txt\".\n3. Use the task_complete command to
      complete the task.\n4. Do not use any other commands.\n\n\nConstraints:\n1.
      ~4000 word limit for short term memory. Your short term memory is short, so
      immediately save important information to files.\n2. If you are unsure how you
      previously did something or want to recall past events, thinking about similar
      events will help you remember.\n3. No user assistance\n4. Exclusively use the
      commands listed below e.g. command_name\n\nCommands:\n1. append_to_file: Append
      to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file:
      Delete file, args: \"filename\": \"<filename>\"\n3. list_files: List Files in
      Directory, args: \"directory\": \"<directory>\"\n4. read_file: Read a file,
      args: \"filename\": \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\":
      \"<filename>\", \"text\": \"<text>\"\n6. browse_website: Browse Website, args:
      \"url\": \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n7.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n8. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n9. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n10. list_agents: List
      GPT Agents, args: () -> str\n11. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n12. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n13.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I will use the browse_website command
      to visit http://books.toscrape.com/catalogue/meditations_33/index.html and find
      the price of the book.\",\n        \"reasoning\": \"The task requires me to
      visit a website and find the price of a book. The browse_website command is
      the best option for this task.\",\n        \"plan\": \"- Use the browse_website
      command to visit the website\\n- Find the price of the book\\n- Write the price
      to a file named ''browse_website.txt''\\n- Use the task_complete command to
      complete the task\",\n        \"criticism\": \"I need to ensure that I am using
      the correct URL and question to find the price of the book.\",\n        \"speak\":
      \"I will use the browse_website command to visit the website and find the price
      of the book.\"\n    },\n    \"command\": {\n        \"name\": \"browse_website\",\n        \"args\":
      {\n            \"url\": \"http://books.toscrape.com/catalogue/meditations_33/index.html\",\n            \"question\":
      \"What is the price of the book?\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command browse_website returned: Answer gathered from website: a
      description of the book \"Meditations\" by Marcus Aurelius, which is available
      for purchase on a demo website for web scraping purposes. The price of the book
      is \u00a325.89, but the website warns that the prices and ratings are randomly
      assigned and have no real meaning. The book offers spiritual reflections and
      exercises developed by the Roman emperor and philosopher, covering topics such
      as moral virtue, human rationality, and divine providence. It is considered
      one of the greatest works of philosophy and has been admired by thinkers and
      readers throughout history.\n\nLinks: [''Books to Scrape (http://books.toscrape.com/index.html)'',
      ''Home (http://books.toscrape.com/index.html)'', ''Books (http://books.toscrape.com/catalogue/category/books_1/index.html)'',
      ''Philosophy (http://books.toscrape.com/catalogue/category/books/philosophy_7/index.html)'',
      '' (http://books.toscrape.com/catalogue/the-nicomachean-ethics_75/index.html)'']"},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I will use the write_to_file command to write the price
      of the book to a file named ''browse_website.txt''.\",\n        \"reasoning\":
      \"The task requires me to write the price of the book to a file. The write_to_file
      command is the best option for this task.\",\n        \"plan\": \"- Use the
      write_to_file command to write the price of the book to a file named ''browse_website.txt''\\n-
      Use the task_complete command to complete the task\",\n        \"criticism\":
      \"I need to ensure that I am writing the correct information to the file and
      that the file is created in the correct directory.\",\n        \"speak\": \"I
      will use the write_to_file command to write the price of the book to a file
      named ''browse_website.txt''.\"\n    },\n    \"command\": {\n        \"name\":
      \"write_to_file\",\n        \"args\": {\n            \"filename\": \"browse_website.txt\",\n            \"text\":
      \"\u00a325.89\"\n        }\n    }\n}"}, {"role": "system", "content": "Command
      write_to_file returned: File written to successfully."}, {"role": "user", "content":
      "Determine which next command to use, and respond using the format specified
      above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '7331'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6RSTY/TQAy98yssn9OqHyyBHJcDquBYWCGCqsnESYYmM2HssFuq/nc0+diW7oKE
        OM4bv+dn+x3R5JigrpTopq1n8ftPd3fbMnM/4k38cPsh7n6+Pbz7rDbZ7cFghC77RlpGxly7pq1J
        jLMYofakhHJMlq9e3yxXq8WbVYSNy6nGBMtWZuv5zUw6n7nZYr1YYoQdq5IwOWLrXdPKTtyeLAeB
        5TrCs/jFx8sIxYmqz1Acx6cIdeWMJsbkyxEb4knYu5owQcVsWJSVYNNZIRtGOKYWACBFqVxXVsIp
        JjCC4wc9SABT3MC9qWvomEAqAlG8340GCbRrGmVzEAeP2FQ1TzG6lPSk2Fljy0F3O5aBp++d8cTQ
        0LM6oAohD/feiLFlD7feaAJX9I/MuX0gKihMTXPY/tGl4YFALODasF8onAepwsczjtta2cHsDD7+
        8/xXYjr414abaa2WqCeS5c4HmpK/dDAcTpCDdt6TlvoAfd9LUqiZeDlwpzUxF11dH64H45bU/v/P
        O0ieoilNY/mTMFnV0NDtN/krU8qX1zm8DM45NU+vXymGjCics7N5v5kQFyF7EYzJb+95tJ7aE54i
        LIw1XO2GRpggi2sxQmNzesBkcfp6evELAAD//wMAVV8arS8EAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cd7bbb4b9a72222-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 26 May 2023 17:28:30 GMT
      Function-Execution-Id:
      - h2mu3dit835o
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '18024'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 20c1e2276bf49aacd5212332775e9fa0
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '85963'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.69s
      X-Request-Id:
      - 2e1e98f3b375828b412ae4e0d9847f5f
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are browse_website-GPT, an AI designed to use the browse_website command to
      visit http://books.toscrape.com/catalogue/meditations_33/index.html, answer
      the question ''What is the price of the book?'' and write the price to a file
      named \"browse_website.txt\", and use the task_complete command to complete
      the task.\nYour decisions must always be made independently without seeking
      user assistance. Play to your strengths as an LLM and pursue simple strategies
      with no legal complications.\n\nGOALS:\n\n1. Use the browse_website command
      to visit http://books.toscrape.com/catalogue/meditations_33/index.html and answer
      the question ''What is the price of the book?''\n2. Write the price of the book
      to a file named \"browse_website.txt\".\n3. Use the task_complete command to
      complete the task.\n4. Do not use any other commands.\n\n\nConstraints:\n1.
      ~4000 word limit for short term memory. Your short term memory is short, so
      immediately save important information to files.\n2. If you are unsure how you
      previously did something or want to recall past events, thinking about similar
      events will help you remember.\n3. No user assistance\n4. Exclusively use the
      commands listed below e.g. command_name\n\nCommands:\n1. append_to_file: Append
      to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file:
      Delete file, args: \"filename\": \"<filename>\"\n3. list_files: List Files in
      Directory, args: \"directory\": \"<directory>\"\n4. read_file: Read a file,
      args: \"filename\": \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\":
      \"<filename>\", \"text\": \"<text>\"\n6. browse_website: Browse Website, args:
      \"url\": \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n7.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n8. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n9. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n10. list_agents: List
      GPT Agents, args: () -> str\n11. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n12. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n13.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks!\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '3767'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/test/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6RTS2/TQBC+8ytGc3ZeTdoGX7hVKhxQ1UIRGEWb9djext5xd8ekEOW/o/Wjj7QV
        CK4zO99rZ3ZoUoxRF0p0VZej0w9f3l68158vFgt1lt38OnEXp6cfLy+br02mMEJe35CWfmKsuapL
        EsMWI9SOlFCK8exkeTw7Ws4XywgrTqnEGPNaRvPx8Ugat+bRdD6dYYSNVzlhvMPacVXLSnhD1mO8
        XJxE+IB9Xz+aLyMUFlXel2bT5WIfoS7YaPIYf9thRX7AdVwSxqi8N16UlaCSrZANDnaJBQBIUApu
        8kJ8gjH0xb5BdxKKCZ7D1pQlNJ5ACoK1462n1ZbW3giB5qpSNgVh+GG8EShE6ngyWTNv/FjYa6dq
        CmlNtBJVct7QpKLUiAr+/Go+nxib0t24kKqEAJWZgFcQ1M5oAs46XubNOMHosUhHyrM1Nu+UXhUE
        ovwGHN02xpGHih6EKRg0v0yiOgq4et2k8Z0U8gJcB/2QsQMpQkP5Z/rqUtlO2gg+/WV+4U3fTBI7
        grNX02jb1y6gPPSFQUFmSgKrKkoP6MZyJ+3YoCaoXvXr9kTMfW14dWBNOyNGG18NS2KJ2kGyvnFh
        TAmcg6pAad04JVT+bEM3Nn/ZTvst2wBrcwhBcNvS7BxpaT0d5utrUpt/2tJHKf955zrKfTQcTY/2
        7GZC4p2ap/QHqpXLD++tazSu7Mb/64aesHXAtw358LJDvw5f06/yM7vvBrut5d55Yve4jzAz1vhi
        1V0dxuiFa4ywpcZ4uv++f/MbAAD//wMAsfsL/1QFAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cd85471be3cf22e-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 26 May 2023 19:12:50 GMT
      Function-Execution-Id:
      - vae2deq8pu6a
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '21997'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 5f0a925ebc7d51826c36404a6ecc0bc3;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86494'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.337s
      X-Request-Id:
      - 8d2c9c8278fba07ae1f74795755a4277
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are browse_website-GPT, an AI designed to use the browse_website command to
      visit http://books.toscrape.com/catalogue/meditations_33/index.html, answer
      the question ''What is the price of the book?'' and write the price to a file
      named \"browse_website.txt\", and use the task_complete command to complete
      the task.\nYour decisions must always be made independently without seeking
      user assistance. Play to your strengths as an LLM and pursue simple strategies
      with no legal complications.\n\nGOALS:\n\n1. Use the browse_website command
      to visit http://books.toscrape.com/catalogue/meditations_33/index.html and answer
      the question ''What is the price of the book?''\n2. Write the price of the book
      to a file named \"browse_website.txt\".\n3. Use the task_complete command to
      complete the task.\n4. Do not use any other commands.\n\n\nConstraints:\n1.
      ~4000 word limit for short term memory. Your short term memory is short, so
      immediately save important information to files.\n2. If you are unsure how you
      previously did something or want to recall past events, thinking about similar
      events will help you remember.\n3. No user assistance\n4. Exclusively use the
      commands listed below e.g. command_name\n\nCommands:\n1. append_to_file: Append
      to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file:
      Delete file, args: \"filename\": \"<filename>\"\n3. list_files: List Files in
      Directory, args: \"directory\": \"<directory>\"\n4. read_file: Read a file,
      args: \"filename\": \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\":
      \"<filename>\", \"text\": \"<text>\"\n6. browse_website: Browse Website, args:
      \"url\": \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n7.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n8. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n9. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n10. list_agents: List
      GPT Agents, args: () -> str\n11. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n12. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n13.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks!\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I will use the browse_website command
      to visit http://books.toscrape.com/catalogue/meditations_33/index.html and find
      the price of the book.\",\n        \"reasoning\": \"The task requires me to
      visit a website and find the price of a book. The browse_website command is
      the best option for this task.\",\n        \"plan\": \"- Use the browse_website
      command to visit the website\\n- Find the price of the book\\n- Write the price
      to a file named browse_website.txt\\n- Use the task_complete command to complete
      the task\",\n        \"criticism\": \"I need to ensure that I am accurately
      finding the price of the book and writing it to the correct file.\",\n        \"speak\":
      \"I will use the browse_website command to visit the website and find the price
      of the book.\"\n    },\n    \"command\": {\n        \"name\": \"browse_website\",\n        \"args\":
      {\n            \"url\": \"http://books.toscrape.com/catalogue/meditations_33/index.html\",\n            \"question\":
      \"What is the price of the book?\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command browse_website returned: Answer gathered from website: a
      description of the book \"Meditations\" by Marcus Aurelius, which is available
      for purchase on a demo website for web scraping purposes. The price of the book
      is \u00a325.89, but the website warns that the prices and ratings are randomly
      assigned and have no real meaning. The book offers spiritual reflections and
      exercises developed by the Roman emperor and philosopher, covering topics such
      as moral virtue, human rationality, and divine providence. It is considered
      one of the greatest works of philosophy and has been admired by thinkers and
      readers throughout history.\n\nLinks: [''Books to Scrape (http://books.toscrape.com/index.html)'',
      ''Home (http://books.toscrape.com/index.html)'', ''Books (http://books.toscrape.com/catalogue/category/books_1/index.html)'',
      ''Philosophy (http://books.toscrape.com/catalogue/category/books/philosophy_7/index.html)'',
      '' (http://books.toscrape.com/catalogue/the-nicomachean-ethics_75/index.html)'']"},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '6128'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/test/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA7yTzY7TQAzH7zyF5XMa9WOz7ebGjdVyQSwSgqBoOnGTIck4O+OoFVWfhjfhyVA+
        ut0GkLjAcfy3//6Nx3NEk2GMulCi66aarR8+3km+eC374iBvy+V7/hY9uTf8UN28+4QB8vYraRkr
        Qs11U5EYthigdqSEMowXt5tosdys1usAa86owhjzRmarMJpJ67Y8m6/mCwyw9SonjI/YOK4bSYVL
        sh7jxSq6CfBi/iws58sAhUVVl9wouj0FqAs2mjzGn49Ykz8bO64IY1TeGy/KSofJVsh2VzgmFgAg
        QSm4zQvxCcYwBkeBDtIFE7yHvakqaD2BFAR7Z4RS4XRnKgLNda1sBsKD0Kc0zmgC3vWHLXPZyQr6
        AqtqymDreO8p3dPWG6FQDhImGLzs70h5tsbmA8RjQSDKl+DoqTWOPNT0101DePwjuPFDAXkBbrqR
        w44dSNEJypdTrqZSdkCawYd/O5IksZceHUs67sVVj+fYOWsCrJ0Ro42vz69pifpCsr51XZkSuAdV
        97TG5r2RZudIy8gtfBXsZzpp4xtS5X9emKH/KTgv8+j9yy53FgPaFcvkBsrl028wCF3uxeI37/TS
        Z/p7fnxfRuHm7gzbA4/ciT3hKcCdscYX6bDwGKMXbjBAYzM6YDw/fTm9+gkAAP//AwDP7okUqwQA
        AA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cd8552809af8143-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 26 May 2023 19:13:17 GMT
      Function-Execution-Id:
      - vae2m3qw4nld
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '19808'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 2d28fb51d741b1a58360eaa18b536bbb;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '85965'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.69s
      X-Request-Id:
      - 02461ff539612e35f2faf9f800b50a80
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are browse_website-GPT, an AI designed to use the browse_website command to
      visit http://books.toscrape.com/catalogue/meditations_33/index.html, answer
      the question ''What is the price of the book?'' and write the price to a file
      named \"browse_website.txt\", and use the task_complete command to complete
      the task.\nYour decisions must always be made independently without seeking
      user assistance. Play to your strengths as an LLM and pursue simple strategies
      with no legal complications.\n\nGOALS:\n\n1. Use the browse_website command
      to visit http://books.toscrape.com/catalogue/meditations_33/index.html and answer
      the question ''What is the price of the book?''\n2. Write the price of the book
      to a file named \"browse_website.txt\".\n3. Use the task_complete command to
      complete the task.\n4. Do not use any other commands.\n\n\nConstraints:\n1.
      ~4000 word limit for short term memory. Your short term memory is short, so
      immediately save important information to files.\n2. If you are unsure how you
      previously did something or want to recall past events, thinking about similar
      events will help you remember.\n3. No user assistance\n4. Exclusively use the
      commands listed below e.g. command_name\n\nCommands:\n1. append_to_file: Append
      to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file:
      Delete file, args: \"filename\": \"<filename>\"\n3. list_files: List Files in
      Directory, args: \"directory\": \"<directory>\"\n4. read_file: Read a file,
      args: \"filename\": \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\":
      \"<filename>\", \"text\": \"<text>\"\n6. browse_website: Browse Website, args:
      \"url\": \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n7.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n8. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n9. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n10. list_agents: List
      GPT Agents, args: () -> str\n11. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n12. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n13.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks!\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I will use the browse_website command
      to visit http://books.toscrape.com/catalogue/meditations_33/index.html and find
      the price of the book.\",\n        \"reasoning\": \"The task requires me to
      visit a website and find the price of a book. The browse_website command is
      the best option for this task.\",\n        \"plan\": \"- Use the browse_website
      command to visit the website\\n- Find the price of the book\\n- Write the price
      to a file named browse_website.txt\\n- Use the task_complete command to complete
      the task\",\n        \"criticism\": \"I need to ensure that I am accurately
      finding the price of the book and writing it to the correct file.\",\n        \"speak\":
      \"I will use the browse_website command to visit the website and find the price
      of the book.\"\n    },\n    \"command\": {\n        \"name\": \"browse_website\",\n        \"args\":
      {\n            \"url\": \"http://books.toscrape.com/catalogue/meditations_33/index.html\",\n            \"question\":
      \"What is the price of the book?\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command browse_website returned: Answer gathered from website: a
      description of the book \"Meditations\" by Marcus Aurelius, which is available
      for purchase on a demo website for web scraping purposes. The price of the book
      is \u00a325.89, but the website warns that the prices and ratings are randomly
      assigned and have no real meaning. The book offers spiritual reflections and
      exercises developed by the Roman emperor and philosopher, covering topics such
      as moral virtue, human rationality, and divine providence. It is considered
      one of the greatest works of philosophy and has been admired by thinkers and
      readers throughout history.\n\nLinks: [''Books to Scrape (http://books.toscrape.com/index.html)'',
      ''Home (http://books.toscrape.com/index.html)'', ''Books (http://books.toscrape.com/catalogue/category/books_1/index.html)'',
      ''Philosophy (http://books.toscrape.com/catalogue/category/books/philosophy_7/index.html)'',
      '' (http://books.toscrape.com/catalogue/the-nicomachean-ethics_75/index.html)'']"},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I will use the write_to_file command to write the price
      of the book to a file named browse_website.txt.\",\n        \"reasoning\": \"The
      task requires me to write the price of the book to a file. The write_to_file
      command is the best option for this task.\",\n        \"plan\": \"- Use the
      write_to_file command to write the price of the book to a file named browse_website.txt\\n-
      Use the task_complete command to complete the task\",\n        \"criticism\":
      \"I need to ensure that I am writing the correct price to the correct file.\",\n        \"speak\":
      \"I will use the write_to_file command to write the price of the book to a file
      named browse_website.txt.\"\n    },\n    \"command\": {\n        \"name\": \"write_to_file\",\n        \"args\":
      {\n            \"filename\": \"browse_website.txt\",\n            \"text\":
      \"\u00a325.89\"\n        }\n    }\n}"}, {"role": "system", "content": "Command
      write_to_file returned: File written to successfully."}, {"role": "user", "content":
      "Determine which next command to use, and respond using the format specified
      above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '7285'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/test/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA7SSQW/TQBCF7/yK0ZzXkZMmJPWtPSAFLkhQhMBVtFlP7CXrXdczJq0i/3fk2GlC
        oBUXrjM7732zb/ZoM0zQFFpMWblo/uHrzfJjtruTLw/fbt9PPl0v4ncbt6XNw+0UFYb1DzIyTIxM
        KCtHYoNHhaYmLZRhMn67mI0ni2k8UViGjBwmmFcSXY1mkTT1OkTxVTxGhQ3rnDDZY1WHspKVhC15
        xmQ8u14oPImfGtO5Qgmi3ak0n85ahaYI1hBj8n2PJfFRuA6OMEHNbFm0lw4zeCHfrbBPPQBAilKE
        Ji+EU0xgKA4NepSumOISCv2TYGCiDKQgEM1bBRxgCTvrHDRMz/XV8Wk3U2qfgQTgohHIws6PUlTn
        RjVpDt76vHf7PIhAoRnWRP7MmBtjiHnTOPd0MH/Z0fKhuSYWCFX3k69CVE773j+Cu39e5ULE1Fas
        sVwe/80THQbIc1N3olpeR26YMjChrsmIe7qE5Ir09n9l0hu16ngYw7M/7sLrknqG32QvUHWdX57U
        edpD1F3Mf0/3GegANbClvsVW4cZ6y8WqV8IEWUKFCq3P6BGTuL1v3/wCAAD//wMAWdTIMNsDAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cd855c1ca5522ec-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 26 May 2023 19:13:36 GMT
      Function-Execution-Id:
      - vae2i6vxcl9i
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '14501'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 44776667c43c7128973691afe14b0751;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '85960'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.692s
      X-Request-Id:
      - d116192187a77cabc6b2b7c2ca7b8400
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are browse_website-GPT, an AI designed to use the browse_website command to
      visit http://books.toscrape.com/catalogue/meditations_33/index.html, answer
      the question ''What is the price of the book?'' and write the price to a file
      named \"browse_website.txt\", and use the task_complete command to complete
      the task.\nYour decisions must always be made independently without seeking
      user assistance. Play to your strengths as an LLM and pursue simple strategies
      with no legal complications.\n\nGOALS:\n\n1. Use the browse_website command
      to visit http://books.toscrape.com/catalogue/meditations_33/index.html and answer
      the question ''What is the price of the book?''\n2. Write the price of the book
      to a file named \"browse_website.txt\".\n3. Use the task_complete command to
      complete the task.\n4. Do not use any other commands.\n\n\nConstraints:\n1.
      ~4000 word limit for short term memory. Your short term memory is short, so
      immediately save important information to files.\n2. If you are unsure how you
      previously did something or want to recall past events, thinking about similar
      events will help you remember.\n3. No user assistance\n4. Exclusively use the
      commands listed below e.g. command_name\n\nCommands:\n1. append_to_file: Append
      to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file:
      Delete file, args: \"filename\": \"<filename>\"\n3. list_files: List Files in
      Directory, args: \"directory\": \"<directory>\"\n4. read_file: Read a file,
      args: \"filename\": \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\":
      \"<filename>\", \"text\": \"<text>\"\n6. browse_website: Browse Website, args:
      \"url\": \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n7.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n8. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n9. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n10. list_agents: List
      GPT Agents, args: () -> str\n11. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n12. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n13.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach!\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '3767'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6RTS2/TQBC+8ytGc+nFSRzSR+QLEkWICk4VVYswijbrib3E3nF2x7Qiyn+v1o+2
        SSmq4Dqz8712ZosmwwR1oURXdTk6+3yjvsW0nP/+dOnP8+bKnG/eWy5XH85vNhghL3+Sln5irLmq
        SxLDFiPUjpRQhsn0dH4yncXxLI6w4oxKTDCvZTQbn4ykcUsexbN4ihE2XuWEyRZrx1UtC+E1WY/J
        /Pg0wkfsh/rb42mEwqLKh9I0np/tItQFG00ek+9brMgPuI5LwgSV98aLshJUshWywcE2tQAAKUrB
        TV6ITzGBvtg36E5CMcULuDVlCY0nkIJg6fjW0+KWlt4IgeaqUjYDYfhlvBEoROpkMlkyr/1Y2Gun
        agppTbQSVXLe0KSizIgK/vxiNpsYm9HduJCqhAC1MgGvIKid0QS86niZ1+MUo6ciHSnP1ti8U/q1
        IBDl1+Bo0xhHHioKwl4GjFrCv9gyvuuSF+A6KH50GhrD+z3dxq7YVa2/Q8V1qWwndgRXr0z0CU+a
        2hF8fNFO2752AeWxLwwKVqYksKqiDI72+cZyJ0ft4KAnRLjoV3BPzkNteHVgTjsjRhtfDYtjidpB
        sr5xYUwJXICqoPHG5i2MZudIC1xdfmlD3DTkh5hfvwi+JrX+p3V98RP/xNlR7qLhenq0Z8cTgu7U
        7NMfqFYuPzy8rtG4shv/r2PaY+uAh3Q79OvwH/2GP7P7brDbWu6dp3aHuwhXxhpfLLrzwwS9cI0R
        ttSYxLsfuzf3AAAA//8DAO8aTNpdBQAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cd87d82def629a5-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 26 May 2023 19:40:52 GMT
      Function-Execution-Id:
      - r3dvpixe1b31
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '22044'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 77a58aac914de676b0b15db70b3d0387;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86493'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.337s
      X-Request-Id:
      - bc73cd1068f26448777ecb4abfa549f1
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are browse_website-GPT, an AI designed to use the browse_website command to
      visit http://books.toscrape.com/catalogue/meditations_33/index.html, answer
      the question ''What is the price of the book?'' and write the price to a file
      named \"browse_website.txt\", and use the task_complete command to complete
      the task.\nYour decisions must always be made independently without seeking
      user assistance. Play to your strengths as an LLM and pursue simple strategies
      with no legal complications.\n\nGOALS:\n\n1. Use the browse_website command
      to visit http://books.toscrape.com/catalogue/meditations_33/index.html and answer
      the question ''What is the price of the book?''\n2. Write the price of the book
      to a file named \"browse_website.txt\".\n3. Use the task_complete command to
      complete the task.\n4. Do not use any other commands.\n\n\nConstraints:\n1.
      ~4000 word limit for short term memory. Your short term memory is short, so
      immediately save important information to files.\n2. If you are unsure how you
      previously did something or want to recall past events, thinking about similar
      events will help you remember.\n3. No user assistance\n4. Exclusively use the
      commands listed below e.g. command_name\n\nCommands:\n1. append_to_file: Append
      to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file:
      Delete file, args: \"filename\": \"<filename>\"\n3. list_files: List Files in
      Directory, args: \"directory\": \"<directory>\"\n4. read_file: Read a file,
      args: \"filename\": \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\":
      \"<filename>\", \"text\": \"<text>\"\n6. browse_website: Browse Website, args:
      \"url\": \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n7.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n8. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n9. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n10. list_agents: List
      GPT Agents, args: () -> str\n11. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n12. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n13.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach!\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I will use the browse_website command
      to visit http://books.toscrape.com/catalogue/meditations_33/index.html and find
      the price of the book.\",\n        \"reasoning\": \"The task requires me to
      find the price of the book, and the browse_website command is the best option
      to visit the website and find the information.\",\n        \"plan\": \"- Use
      the browse_website command to visit the website\\n- Find the price of the book\\n-
      Write the price to a file named ''browse_website.txt''\\n- Use the task_complete
      command to complete the task\",\n        \"criticism\": \"I need to ensure that
      I am using the correct URL and question to find the price of the book.\",\n        \"speak\":
      \"I will use the browse_website command to visit the website and find the price
      of the book.\"\n    },\n    \"command\": {\n        \"name\": \"browse_website\",\n        \"args\":
      {\n            \"url\": \"http://books.toscrape.com/catalogue/meditations_33/index.html\",\n            \"question\":
      \"What is the price of the book?\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command browse_website returned: Answer gathered from website: a
      description of the book \"Meditations\" by Marcus Aurelius, which is available
      for purchase on a demo website for web scraping purposes. The price of the book
      is \u00a325.89, but the website warns that the prices and ratings are randomly
      assigned and have no real meaning. The book offers spiritual reflections and
      exercises developed by the Roman emperor and philosopher, covering topics such
      as moral virtue, human rationality, and divine providence. It is considered
      one of the greatest works of philosophy and has been admired by thinkers and
      readers throughout history.\n\nLinks: [''Books to Scrape (http://books.toscrape.com/index.html)'',
      ''Home (http://books.toscrape.com/index.html)'', ''Books (http://books.toscrape.com/catalogue/category/books_1/index.html)'',
      ''Philosophy (http://books.toscrape.com/catalogue/category/books/philosophy_7/index.html)'',
      '' (http://books.toscrape.com/catalogue/the-nicomachean-ethics_75/index.html)'']"},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '6137'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA7yTz47TQAzG7zyF5cte0ipp1W3JmctqJU4gWAiqJhM3GZoZpzMuLar6NLwJT4by
        b0u7QuICpyj+7M+/8YxPaApMUVdKtG3qyfLxYz4rbPNt9+bx09OOk6cP3tpdnifHtyVGyPlX0jJU
        TDXbpiYx7DBC7UkJFZgm96tFMo/j+zhCywXVmGLZyGQ+XUxk73OexPM4wQj3QZWE6Qkbz7aRtfCW
        XMA0mS+WEV7Mn4VZsopQWFR9yV0sF+cIdcVGU8D08wkthdHYc02YogrBBFFOWkx2Qq49wilzAAAZ
        SsX7spKQYQpDcBDoKG0wwwc4mLqGfSCQiuDgjdBaeL0xNYFma5UrQLgXupTGG03Am+4nZ962soKu
        wClLBdzlng+B1gfKgxGaylHuphlGvxN4UoGdcWWP8a4iEBW24Gm3N54CWPrrthF0kH/EN6EvoiDA
        TTv4rlZ3F2FCBVKZcAvY1Mr1bBN4/6+nk2Xu0qWdw3p4JFddnmNj1g2y9kaMNsGOV+uIukJyYe/b
        MiXwAMp2vMaVnZFm70kLGLdhb9U4nlbqqPvZKrlETIBhJ8C4K4/CtB/232+nGRpS2//+4nqCczTu
        w+D+Yh1akx7uiubmDMqXt5vUC23uxeIlypXP7QL+/DFbTFevR9gOeODO3BnPEW6MM6Fa9xuDKQbh
        BiM0rqAjpvH5y/nVLwAAAP//AwAsHHv47gQAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cd87e3ecccd22f1-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 26 May 2023 19:41:22 GMT
      Function-Execution-Id:
      - r3dvvedudijr
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '22010'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - b9fe237e8df3175da7c674c4b029162f;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '85966'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.689s
      X-Request-Id:
      - 1b2b795f974118b7043f1b5be93312db
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are browse_website-GPT, an AI designed to use the browse_website command to
      visit http://books.toscrape.com/catalogue/meditations_33/index.html, answer
      the question ''What is the price of the book?'' and write the price to a file
      named \"browse_website.txt\", and use the task_complete command to complete
      the task.\nYour decisions must always be made independently without seeking
      user assistance. Play to your strengths as an LLM and pursue simple strategies
      with no legal complications.\n\nGOALS:\n\n1. Use the browse_website command
      to visit http://books.toscrape.com/catalogue/meditations_33/index.html and answer
      the question ''What is the price of the book?''\n2. Write the price of the book
      to a file named \"browse_website.txt\".\n3. Use the task_complete command to
      complete the task.\n4. Do not use any other commands.\n\n\nConstraints:\n1.
      ~4000 word limit for short term memory. Your short term memory is short, so
      immediately save important information to files.\n2. If you are unsure how you
      previously did something or want to recall past events, thinking about similar
      events will help you remember.\n3. No user assistance\n4. Exclusively use the
      commands listed below e.g. command_name\n\nCommands:\n1. append_to_file: Append
      to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file:
      Delete file, args: \"filename\": \"<filename>\"\n3. list_files: List Files in
      Directory, args: \"directory\": \"<directory>\"\n4. read_file: Read a file,
      args: \"filename\": \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\":
      \"<filename>\", \"text\": \"<text>\"\n6. browse_website: Browse Website, args:
      \"url\": \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n7.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n8. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n9. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n10. list_agents: List
      GPT Agents, args: () -> str\n11. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n12. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n13.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach!\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I will use the browse_website command
      to visit http://books.toscrape.com/catalogue/meditations_33/index.html and find
      the price of the book.\",\n        \"reasoning\": \"The task requires me to
      find the price of the book, and the browse_website command is the best option
      to visit the website and find the information.\",\n        \"plan\": \"- Use
      the browse_website command to visit the website\\n- Find the price of the book\\n-
      Write the price to a file named ''browse_website.txt''\\n- Use the task_complete
      command to complete the task\",\n        \"criticism\": \"I need to ensure that
      I am using the correct URL and question to find the price of the book.\",\n        \"speak\":
      \"I will use the browse_website command to visit the website and find the price
      of the book.\"\n    },\n    \"command\": {\n        \"name\": \"browse_website\",\n        \"args\":
      {\n            \"url\": \"http://books.toscrape.com/catalogue/meditations_33/index.html\",\n            \"question\":
      \"What is the price of the book?\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command browse_website returned: Answer gathered from website: a
      description of the book \"Meditations\" by Marcus Aurelius, which is available
      for purchase on a demo website for web scraping purposes. The price of the book
      is \u00a325.89, but the website warns that the prices and ratings are randomly
      assigned and have no real meaning. The book offers spiritual reflections and
      exercises developed by the Roman emperor and philosopher, covering topics such
      as moral virtue, human rationality, and divine providence. It is considered
      one of the greatest works of philosophy and has been admired by thinkers and
      readers throughout history.\n\nLinks: [''Books to Scrape (http://books.toscrape.com/index.html)'',
      ''Home (http://books.toscrape.com/index.html)'', ''Books (http://books.toscrape.com/catalogue/category/books_1/index.html)'',
      ''Philosophy (http://books.toscrape.com/catalogue/category/books/philosophy_7/index.html)'',
      '' (http://books.toscrape.com/catalogue/the-nicomachean-ethics_75/index.html)'']"},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I will use the write_to_file command to write the price
      of the book to a file named ''browse_website.txt''.\",\n        \"reasoning\":
      \"The task requires me to write the price of the book to a file, and the write_to_file
      command is the best option to accomplish this.\",\n        \"plan\": \"- Use
      the write_to_file command to write the price of the book to a file named ''browse_website.txt''\\n-
      Use the task_complete command to complete the task\",\n        \"criticism\":
      \"I need to ensure that I am writing the correct information to the file and
      that the file is created in the correct directory.\",\n        \"speak\": \"I
      will use the write_to_file command to write the price of the book to a file
      named ''browse_website.txt''.\"\n    },\n    \"command\": {\n        \"name\":
      \"write_to_file\",\n        \"args\": {\n            \"filename\": \"browse_website.txt\",\n            \"text\":
      \"\u00a325.89\"\n        }\n    }\n}"}, {"role": "system", "content": "Command
      write_to_file returned: File written to successfully."}, {"role": "user", "content":
      "Determine which next command to use, and respond using the format specified
      above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '7361'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6SS247TQAyG73mKkW/2Zlqlqrpd5QFYFi64YBchUVRNJk4yNDOOxg7tqsq7oxx6
        oAgJxK0Pn//f9hFcDinYyoj1TT1bf/iSPX88vLxbicfq89snv3tfrBL76fExfwUNlH1HK1PH3JJv
        ahRHATTYiEYwh3Rx/7BaLJPkYa3BU441pFA2MlvOVzNpY0azZJksQEPLpkRIj9BE8o1shXYYuAcs
        1hou8Etida9BSEx9Ca3Xy06DrchZZEi/HsEjn8CRaoQUDLNjMUF6mRQEQ2/huAlKKbUBqagtK+EN
        pGoKTgk8SB/cwJPau7pWLaOSCpUY3m0ngagseW9CroTUOXaqmm9AXyMjGqbgQjlyn6cyVRlWGWI4
        E3LFrbXIXLR1/arVMOCPox0PyQxZFDX90v5KTVObMAqZqZd/9nYDs9GJs479aWUBcWjEwG3s24wM
        veMOVEHxxHShPFN7L8baNhrBwbULBUVvxP3AW/3coNn9/4VGZKdPDzGV//YPwXgcp/2CvxFlYnn7
        Ste3vxy+ic6iomI8HdHVFxTUhnxwv49OBIdzGlW4GlWvIld3WaQ943aPGTvBuRzk7mxlsDO52oQO
        Og2FC46r7agBUmChBjS4kOMB0qT71r35CQAA//8DAMHSH/UNBAAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cd87ee648902d58-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 26 May 2023 19:41:43 GMT
      Function-Execution-Id:
      - r3dvj323e0ly
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '15644'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 39292eba9582945880e3c00f807bd69d;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '85960'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.692s
      X-Request-Id:
      - 4d44062e73783888bc08b9f99c8ca0a8
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are browse_website-GPT, an AI designed to use the browse_website command to
      visit http://books.toscrape.com/catalogue/meditations_33/index.html, answer
      the question ''What is the price of the book?'' and write the price to a file
      named \"browse_website.txt\", and use the task_complete command to complete
      the task.\nYour decisions must always be made independently without seeking
      user assistance. Play to your strengths as an LLM and pursue simple strategies
      with no legal complications.\n\nGOALS:\n\n1. Use the browse_website command
      to visit http://books.toscrape.com/catalogue/meditations_33/index.html and answer
      the question ''What is the price of the book?''\n2. Write the price of the book
      to a file named \"browse_website.txt\".\n3. Use the task_complete command to
      complete the task.\n4. Do not use any other commands.\n\n\nConstraints:\n1.
      ~4000 word limit for short term memory. Your short term memory is short, so
      immediately save important information to files.\n2. If you are unsure how you
      previously did something or want to recall past events, thinking about similar
      events will help you remember.\n3. No user assistance\n4. Exclusively use the
      commands listed below e.g. command_name\n\nCommands:\n1. append_to_file: Append
      to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file:
      Delete file, args: \"filename\": \"<filename>\"\n3. list_files: List Files in
      Directory, args: \"directory\": \"<directory>\"\n4. read_file: Read a file,
      args: \"filename\": \"<filename>\"\n5. replace_in_file: Replace text or code
      in a file, args: \"filename\": \"<filename>\", \"old_text\": \"<old_text>\",
      \"new_text\": \"<new_text>\", \"occurrence_index\": \"<occurrence_index>\"\n6.
      write_to_file: Write to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n7. browse_website: Browse Website, args: \"url\": \"<url>\", \"question\":
      \"<what_you_want_to_find_on_website>\"\n8. delete_agent: Delete GPT Agent, args:
      \"key\": \"<key>\"\n9. get_hyperlinks: Get hyperlinks, args: \"url\": \"<url>\"\n10.
      get_text_summary: Get text summary, args: \"url\": \"<url>\", \"question\":
      \"<question>\"\n11. list_agents: List GPT Agents, args: () -> str\n12. message_agent:
      Message GPT Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n13.
      start_agent: Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n14. task_complete: Task Complete (Shutdown), args:
      \"reason\": \"<reason>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach!\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '3962'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/test/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6RUTW8TMRC951eMfOklH03Tz1wQVIAqOCCgKhKLIsc72TWxPYs920RU+e/IdpY0
        AQQV13me9968ndmHHoDQpZiCULVkZRszuHhXlVfXVaW/4/P168lLb9X9Hb1ZX9/Ri0+iHzto/hUV
        d11DRbYxyJpchpVHyRhZx+eX55Oz89OTiwRYKtHEtqrhwWR4NuDWz2lwPDke5842yArFFB56AACi
        8WQbnjEt0QUxhcur035GdpI79GR8uUWZWJodMB6PT3oAm2yuJq0wlj+nx1kqmsOwp56KnkysCBmC
        Diwdi/4OVOQYXcrhoXCxVAiuqa1qDkXkycUtgGuOxULcgEMsgQnagMA1wtzTKuBshfOgGUGRtdKl
        F/c6aIaauZmORnOiZRgyBeVlgzH2kZIsDVUtjiyWmmVMJMwmk5F2Ja6HNVsDkWqhI1+N0HitEGiR
        dYmWw0L0H/v0KAM57aps9uOf7a20MSCNoRVY3JmNxN3TPWntFuRtsgg5g0PtxkiXZQdw+4/ZPJIr
        CjeAV3+cNMEf5D0+gplAwkIbBCctlnC0LzfkNR8dmFRes1Y62MOvaeUSIbQe4QakhTZoVyUpRd6j
        Yrh9/zYl8q3FkFJgesKHCQ3KZaeZsm+fHtHflyFLbvrdQm/ZftnnmFd2sy9/4Fr66vAWMtB6k9v/
        a7n31DJxl25mv6slgw6/H/dZN24aeTt54TZie+Ob7tjFQjsd6lk+jnjwgan5+S8QyZCYwnEqbHoA
        X3qb3g8AAAD//wMAqIk+tV4FAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d4d72d8ee37870b-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Sat, 10 Jun 2023 00:20:35 GMT
      Function-Execution-Id:
      - 4x5fqllvvsat
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '8139'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - d65d42ddfb8d3783f729f3bf33d993d7;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86401'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.399s
      X-Request-Id:
      - dca1778c663290a1229034ef2899d552
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are browse_website-GPT, an AI designed to use the browse_website command to
      visit http://books.toscrape.com/catalogue/meditations_33/index.html, answer
      the question ''What is the price of the book?'' and write the price to a file
      named \"browse_website.txt\", and use the task_complete command to complete
      the task.\nYour decisions must always be made independently without seeking
      user assistance. Play to your strengths as an LLM and pursue simple strategies
      with no legal complications.\n\nGOALS:\n\n1. Use the browse_website command
      to visit http://books.toscrape.com/catalogue/meditations_33/index.html and answer
      the question ''What is the price of the book?''\n2. Write the price of the book
      to a file named \"browse_website.txt\".\n3. Use the task_complete command to
      complete the task.\n4. Do not use any other commands.\n\n\nConstraints:\n1.
      ~4000 word limit for short term memory. Your short term memory is short, so
      immediately save important information to files.\n2. If you are unsure how you
      previously did something or want to recall past events, thinking about similar
      events will help you remember.\n3. No user assistance\n4. Exclusively use the
      commands listed below e.g. command_name\n\nCommands:\n1. append_to_file: Append
      to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file:
      Delete file, args: \"filename\": \"<filename>\"\n3. list_files: List Files in
      Directory, args: \"directory\": \"<directory>\"\n4. read_file: Read a file,
      args: \"filename\": \"<filename>\"\n5. replace_in_file: Replace text or code
      in a file, args: \"filename\": \"<filename>\", \"old_text\": \"<old_text>\",
      \"new_text\": \"<new_text>\", \"occurrence_index\": \"<occurrence_index>\"\n6.
      write_to_file: Write to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n7. browse_website: Browse Website, args: \"url\": \"<url>\", \"question\":
      \"<what_you_want_to_find_on_website>\"\n8. delete_agent: Delete GPT Agent, args:
      \"key\": \"<key>\"\n9. get_hyperlinks: Get hyperlinks, args: \"url\": \"<url>\"\n10.
      get_text_summary: Get text summary, args: \"url\": \"<url>\", \"question\":
      \"<question>\"\n11. list_agents: List GPT Agents, args: () -> str\n12. message_agent:
      Message GPT Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n13.
      start_agent: Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n14. task_complete: Task Complete (Shutdown), args:
      \"reason\": \"<reason>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach!\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "system", "content": "This
      reminds you of these events from your past: \nI was created"}, {"role": "user",
      "content": "Determine which next command to use, and respond using the format
      specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I need to use the browse_website command to visit http://books.toscrape.com/catalogue/meditations_33/index.html
      and find the price of the book.\",\n        \"reasoning\": \"The browse_website
      command will allow me to visit the website and find the information I need.\",\n        \"plan\":
      \"- Use the browse_website command to visit the website\\n- Find the price of
      the book\\n- Save the price to a file named ''browse_website.txt''\",\n        \"criticism\":
      \"I need to make sure I am using the correct URL and question to find the price
      of the book.\",\n        \"speak\": \"I will use the browse_website command
      to visit the website and find the price of the book.\"\n    },\n    \"command\":
      {\n        \"name\": \"browse_website\",\n        \"args\": {\n            \"url\":
      \"http://books.toscrape.com/catalogue/meditations_33/index.html\",\n            \"question\":
      \"What is the price of the book?\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command browse_website returned: Answer gathered from website: a
      description of the book \"Meditations\" by Marcus Aurelius, which is available
      for purchase on a demo website for web scraping purposes. The price of the book
      is \u00a325.89, but the website warns that the prices and ratings are randomly
      assigned and have no real meaning. The book offers spiritual reflections and
      exercises developed by the Roman emperor and philosopher, covering topics such
      as moral virtue, human rationality, and divine providence. It is considered
      one of the greatest works of philosophy and has been admired by thinkers and
      readers throughout history.\n\nLinks: [''Books to Scrape (http://books.toscrape.com/index.html)'',
      ''Home (http://books.toscrape.com/index.html)'', ''Books (http://books.toscrape.com/catalogue/category/books_1/index.html)'',
      ''Philosophy (http://books.toscrape.com/catalogue/category/books/philosophy_7/index.html)'',
      '' (http://books.toscrape.com/catalogue/the-nicomachean-ethics_75/index.html)'']"},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '6223'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/test/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA7STwW4TMRCG73mKkS+9JKu0IWnSG4eqioRCDyAhWBQ53smuidez2LNsUZWn4U14
        MmQ7IelWUC4cd37P/3/2zjwOAIQuxA0IVUlWdWNG1/dl8Wb84W7T4e3rtx9XdKu0Ke7vvm671UoM
        QwdtvqDiY1emqG4MsiabZOVQMgbXy9l8NpnOXk0WUaipQBPayoZHk2w64tZtaDSejC9TZ+tlieIG
        HgcAAKJxVDe8Ztqh9cFuMr8aJumUeSYvZgeViaU5E6bX8wHAPtFVpBWG8qd4OGUFOvRP4mPRkQkV
        Ib3XnqVlMTyJiiyjjQ/xmNtQygVX1JYV+zz4pOJBwAcOxVwswSIWwASd04zAFULjtEKgbfzYEO2C
        LGGrDYKVNRZwsXHUeVx3uPGaMeMHvshgCUpaaH1yiX5rpnXsU1TX0saggoAr7bNcDM+ZHEpPVtsy
        gb37o0WnjQFpDHVQYzD08tuL4P20xkibgkbw/iXifwn4y8v0opXTrJX2df8P1HKH4FuHsARZQ+u1
        LWOSIudQ8SkHIlgl+YxK+8hZHE+b7/07+wbl7hgaX7H9zzfPcpEA9sPjTB7Mn41kMElsT2B6V5Cu
        7E9zEsLZk8VzlCc+/SX4+eNqms0XR9gIfODO7V4clmx/3Dax1Vb7ap0mNmycZ2p+L6PQtsAHcQPj
        WNgPAD4P9oNfAAAA//8DAFDBMS3gBAAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d4d731f9b231263-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Sat, 10 Jun 2023 00:20:46 GMT
      Function-Execution-Id:
      - 4x5fsd04ymwc
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '7784'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 2adc99eadf41f82b1d35dfb1c19d0817;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '85904'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.73s
      X-Request-Id:
      - 0025fc69389e25dbf75e1f2f8a37a9cb
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are browse_website-GPT, an AI designed to use the browse_website command to
      visit http://books.toscrape.com/catalogue/meditations_33/index.html, answer
      the question ''What is the price of the book?'' and write the price to a file
      named \"browse_website.txt\", and use the task_complete command to complete
      the task.\nYour decisions must always be made independently without seeking
      user assistance. Play to your strengths as an LLM and pursue simple strategies
      with no legal complications.\n\nGOALS:\n\n1. Use the browse_website command
      to visit http://books.toscrape.com/catalogue/meditations_33/index.html and answer
      the question ''What is the price of the book?''\n2. Write the price of the book
      to a file named \"browse_website.txt\".\n3. Use the task_complete command to
      complete the task.\n4. Do not use any other commands.\n\n\nConstraints:\n1.
      ~4000 word limit for short term memory. Your short term memory is short, so
      immediately save important information to files.\n2. If you are unsure how you
      previously did something or want to recall past events, thinking about similar
      events will help you remember.\n3. No user assistance\n4. Exclusively use the
      commands listed below e.g. command_name\n\nCommands:\n1. append_to_file: Append
      to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file:
      Delete file, args: \"filename\": \"<filename>\"\n3. list_files: List Files in
      Directory, args: \"directory\": \"<directory>\"\n4. read_file: Read a file,
      args: \"filename\": \"<filename>\"\n5. replace_in_file: Replace text or code
      in a file, args: \"filename\": \"<filename>\", \"old_text\": \"<old_text>\",
      \"new_text\": \"<new_text>\", \"occurrence_index\": \"<occurrence_index>\"\n6.
      write_to_file: Write to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n7. browse_website: Browse Website, args: \"url\": \"<url>\", \"question\":
      \"<what_you_want_to_find_on_website>\"\n8. delete_agent: Delete GPT Agent, args:
      \"key\": \"<key>\"\n9. get_hyperlinks: Get hyperlinks, args: \"url\": \"<url>\"\n10.
      get_text_summary: Get text summary, args: \"url\": \"<url>\", \"question\":
      \"<question>\"\n11. list_agents: List GPT Agents, args: () -> str\n12. message_agent:
      Message GPT Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n13.
      start_agent: Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n14. task_complete: Task Complete (Shutdown), args:
      \"reason\": \"<reason>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach!\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "system", "content": "This
      reminds you of these events from your past: \nI was created"}, {"role": "user",
      "content": "Determine which next command to use, and respond using the format
      specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I need to use the browse_website command to visit http://books.toscrape.com/catalogue/meditations_33/index.html
      and find the price of the book.\",\n        \"reasoning\": \"The browse_website
      command will allow me to visit the website and find the information I need.\",\n        \"plan\":
      \"- Use the browse_website command to visit the website\\n- Find the price of
      the book\\n- Save the price to a file named ''browse_website.txt''\",\n        \"criticism\":
      \"I need to make sure I am using the correct URL and question to find the price
      of the book.\",\n        \"speak\": \"I will use the browse_website command
      to visit the website and find the price of the book.\"\n    },\n    \"command\":
      {\n        \"name\": \"browse_website\",\n        \"args\": {\n            \"url\":
      \"http://books.toscrape.com/catalogue/meditations_33/index.html\",\n            \"question\":
      \"What is the price of the book?\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command browse_website returned: Answer gathered from website: a
      description of the book \"Meditations\" by Marcus Aurelius, which is available
      for purchase on a demo website for web scraping purposes. The price of the book
      is \u00a325.89, but the website warns that the prices and ratings are randomly
      assigned and have no real meaning. The book offers spiritual reflections and
      exercises developed by the Roman emperor and philosopher, covering topics such
      as moral virtue, human rationality, and divine providence. It is considered
      one of the greatest works of philosophy and has been admired by thinkers and
      readers throughout history.\n\nLinks: [''Books to Scrape (http://books.toscrape.com/index.html)'',
      ''Home (http://books.toscrape.com/index.html)'', ''Books (http://books.toscrape.com/catalogue/category/books_1/index.html)'',
      ''Philosophy (http://books.toscrape.com/catalogue/category/books/philosophy_7/index.html)'',
      '' (http://books.toscrape.com/catalogue/the-nicomachean-ethics_75/index.html)'']"},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I need to write the price of the book to a file named
      ''browse_website.txt''. I can use the write_to_file command to do this.\",\n        \"reasoning\":
      \"The write_to_file command will allow me to save the price of the book to a
      file.\",\n        \"plan\": \"- Use the write_to_file command to save the price
      of the book to a file named ''browse_website.txt''\",\n        \"criticism\":
      \"I need to make sure I am using the correct file name and that the price is
      saved correctly.\",\n        \"speak\": \"I will use the write_to_file command
      to save the price of the book to a file named ''browse_website.txt''.\"\n    },\n    \"command\":
      {\n        \"name\": \"write_to_file\",\n        \"args\": {\n            \"filename\":
      \"browse_website.txt\",\n            \"text\": \"\u00a325.89\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command write_to_file returned: File written
      to successfully."}, {"role": "user", "content": "Determine which next command
      to use, and respond using the format specified above:"}], "temperature": 0,
      "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '7323'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/test/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6yTT4/TMBDF7/0UI5/bqku6pfSIBNJygJVg0UpkVbnONDF1PCGebIqqfHdkO+k/
        QALEMe953m/GGR9GAEJnYgVCFZJVWZnJy/s8e/jcvn67/NYmr/aP7z7emzeLxw9q3m7ei7GvoM1X
        VDxUTRWVlUHWZKOtapSMPvVmsVwkt4v5fBmMkjI0viyveJJMbyfc1BuazJLZTaxsnMxRrOAwAgAQ
        VU1lxWumHVoX4l7MxtE6Mc/sZdK7TCzNuTFLRgBd7K4grdDLX8LhyPLdobvAB7Em4xUhndOOpWUx
        PpmKLKMNF3FIrZdSwQU1ecEu9TlR7A3csxdTcQeFfEboR8AMuEBg6XZAW9hqm2mbB62qtUIv+o8N
        0Q6kzcDJZ39AMzCBhK02OIU7UNKCpRYah8fA9cDwsNIXMx25x1PTVIzPO61ROrLa5rHdT78Na7Ux
        II2hFkr8ZXRsuGgYMmptkGWOlq+RlZE20ibw8NcD/ClF1Zq10q4c/oNFDIml3CG4pvaRkk+52p1g
        AT64Id7bJ6qiukbF5vs11VUodwMxXFnzPyeMqG48LGAf89P+WVli7OICe9WsrPPr1T1fisuN+Od9
        Pb/Y4whhjH6a1Haif2fd8ODEVlvtinXsxD86x1Qd36PQNsO9WMEsCN0I4GnUjX4AAAD//wMAfCBC
        o+MEAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d4d735b7fe4111a-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Sat, 10 Jun 2023 00:20:55 GMT
      Function-Execution-Id:
      - 4x5f7sei6l4i
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '7303'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 37d8c698c3700cfd217ac0b962c81e12
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '85903'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.73s
      X-Request-Id:
      - 058cb918cb9ae91a497b29bb986e8f97
    status:
      code: 200
      message: OK
version: 1
